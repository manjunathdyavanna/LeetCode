public int searchInsert(int[] nums, int target) {
		if(target<=nums[0])
			return 0;
		if(target>nums[nums.length-1])
			return nums.length;
		if(target==nums[nums.length-1])
			return nums.length-1;
       if(nums.length==2)
           if(target<nums[1] && target>nums[0])
              return 1;
		return getposition(nums,target,0,nums.length-1);
	}

	private int getposition(int[] nums, int target,int start, int end) {
		int mid = (end+start+1)/2;
		if (mid==end)
			return -1;
		if(nums[mid-1]<target && nums[mid]>target)
			return mid;
		if(nums[mid]<target && nums[mid+1]>target)
			return mid+1;
		if(nums[mid]==target)
			return mid;
		else if(nums[mid]<target)
				return getposition(nums,target,mid,end);
		else if(nums[mid]>target)
			return getposition(nums,target,start,mid);
		else return 0;
	}
